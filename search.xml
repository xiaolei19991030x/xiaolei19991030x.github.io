<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[排序算法—希尔排序]]></title>
    <url>%2F%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%2Fpage-6%2F</url>
    <content type="text"><![CDATA[1.基本思想希尔排序的基本思想就是：将需要排序的序列划分为若干个较小的序列，对这些序列进行直接插入排序，通过这样的操作可使需要排序的数列基本有序，最后再使用一次直接插入排序。 在希尔排序中首先要解决的是怎样划分序列，对于子序列的构成不是简单地分段，而是采取将相隔某个增量的数据组成一个序列。一般选择增量的规则是：取上一个增量的一半作为此次子序列划分的增量，一般初始值元素的总数量。 算法步骤 代码实现 1234567891011121314151617181920212223242526272829package com.tongcaipay.merchant.apply.study;import java.util.Arrays;//希尔排序算法public class ShellSort &#123; public static void sort(int[] arr) &#123; // 缩小增量gap的范围 for (int gap = arr.length / 2; gap &gt; 0; gap = gap / 2) &#123; for (int i = gap; i &lt; arr.length; i++) &#123; int j = i; int temp = arr[j]; while (j - gap &gt;= 0 &amp;&amp; temp &lt; arr[j - gap]) &#123; arr[j] = arr[j - gap]; j = j - gap; &#125; arr[j] = temp; &#125; &#125; &#125; public static void main(String[] args) &#123; int []arr = &#123;10,10,4,8,9,6,5&#125;; sort(arr); System.out.println(Arrays.toString(arr)); &#125;&#125; 2.代码实现]]></content>
      <categories>
        <category>排序算法</category>
      </categories>
      <tags>
        <tag>排序算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[排序算法－快速排序]]></title>
    <url>%2F%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%2Fpage-5%2F</url>
    <content type="text"><![CDATA[快速排序算法是冒泡排序的一种改进，快速排序也是通过逐渐消除待排序的无序序列中逆序元素来实现排序的。 1.算法思想(1) 我们从待排序的记录序列中选取一个记录(通常第一个)作为基准元素(称为temp) temp = arr[low]，然后设置两个变量，low指向数列的最左部，high指向数据的最右部。 (2) temp首先与 arr[high] 进行比较，如果 arr[high] &lt; temp，则arr[low] = arr[high] 将 high 的值赋值给low;如果arr[high] &gt; temp则我们只需要将 high–(high向左移动)。high– 之后，再拿arr[hirh]与temp进行比较，直到arr[high] &lt; temp交换元素为止。 (3) 如果右边存在arr[high] &lt; temp的情况，将arr[low] = arr[high]，接下来，将转向low端，拿arr[low]与temp进行比较，如果arr[low] &gt; temp,则将arr[high] = arr[low]，如果arr[low] &lt; temp，则只需要将 low++,然后再进行arr[low] 与 temp的比较。 (4) 然后再移动high重复上述步骤 (5) 最后得到 {23 58 13 10 57 62} 65 {106 78 95 85}，再对左子数列与右子数列进行同样的操作。最终得到一个有序的数列。 2.算法实现123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354package com.tongcaipay.merchant.apply.study;import java.util.Arrays;public class quickSort &#123; /** * 定义一个要排序的数组 arr[low...high] * @param low 数组arr[]的左下标 * @param high 数组arr[]的右下标 */ /*对数组arr[low...high]进行排序*/ private static void quickSort(int[] arr, int low, int high) &#123; if (low &lt; high) &#123; //对数组进行分割，取出下次分割的基准标号 int index = getIndex(arr, low, high); //算出枢轴值index quickSort(arr, low, index - 1); //对index左侧对数组进行递归切割 quickSort(arr, index + 1, high); //对index右侧对数组进行递归切割 &#125; &#125; private static int getIndex(int[] arr, int low, int high) &#123; int temp = arr[low]; //用数组的第一个作为基准数据 while (low &lt; high) &#123; //当队尾元素大于等于temp时，下标high向前移动 while (low &lt; high &amp;&amp; arr[high] &gt;= temp) &#123; high--; &#125; //当队尾元素小于temp时，将其赋值给low; //当队首元素小于等于temp时，下标low向后移动 while (low &lt; high &amp;&amp; arr[low] &lt;= temp) &#123; low++; &#125; //当队首元素大于temp时，将其赋值给high arr[high] = arr[low]; &#125; arr[high] = arr[low] = temp; //此时high = low return high; // 返回tmp的正确位置 //return low; &#125; public static void main(String[] args) &#123; int arr[] = &#123;23, 58, 13, 10, 57, 62, 106, 78,95,85&#125;; System.out.println("排序前："+Arrays.toString(arr)+" "); quickSort(arr, 0, arr.length - 1); System.out.println("排序后："+Arrays.toString(arr)+" "); &#125;&#125; 运行结果：]]></content>
      <categories>
        <category>排序算法</category>
      </categories>
      <tags>
        <tag>排序算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[排序算法—归并排序]]></title>
    <url>%2F%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%2Fpage-4%2F</url>
    <content type="text"><![CDATA[一、前言归并排序是建立在归并操作上的一种有效的排序算法，该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。 二、算法思想该算法采用经典的分治（divide-and-conquer）策略（分治法将问题分(divide)成一些小的问题然后递归求解，而治(conquer)的阶段则将分的阶段得到的各答案”修补”在一起，即分而治之)。 分而治之： 1、分阶段可以看到这种结构很像一棵完全二叉树，本文的归并排序我们采用递归去实现（也可采用迭代的方式去实现）。分阶段可以理解为就是递归拆分子序列的过程，递归深度为logn。 2、治阶段 再来看看治阶段，我们需要将两个已经有序的子序列合并成一个有序序列，比如上图中的最后一次合并，要将[4,5,7,8]和[1,2,3,6]两个已经有序的子序列，合并为最终序列[1,2,3,4,5,6,7,8]，来看下实现步骤。 3.代码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384package com.tongcaipay.merchant.apply.study;import java.util.Arrays;public class MergingSort &#123; /** * 定义一个要排序的数组 arr[m...n] * * @param m 数组arr[]的左下标 * @param n 数组arr[]的右下标 */ public static void mergeSort(int[] arr, int m, int n) &#123; if (m == n) &#123; //当m=n时，数组内只有一个元素 &#125; else &#123; //1.将数组一分为二 int center = (m + n) / 2; //将arr1[m...n]分成arr1[m...center]和arr1[center+1...n] //2.将数组arr1[m...center]排序 mergeSort(arr, m, center); //3.将数组arr1[center+1...n]排序 mergeSort(arr, center + 1, n); //4.合并两个数组 merge(arr, m, center, n); &#125; &#125; /** * 将arr1[m...center]和arr1[center+1...n]归并为一个有序数组 */ public static void merge(int[] arr, int m, int center, int n) &#123; int[] temp = new int[n - m + 1]; int i = m; //左指针 int j = center + 1; //右指针 int k = 0; int l; //先把较小的数移入数组 while (i &lt;= center &amp;&amp; j &lt;= n) &#123; if (arr[i] &lt; arr[j]) &#123; temp[k] = arr[i]; k = k + 1; i = i + 1; &#125; else&#123; temp[k] = arr[j]; k = k + 1; j = j + 1; &#125; &#125; // 上面的循环退出后，把剩余的元素依次填入到temp中 // 以下两个while只有一个会执行 //把左边剩余的数移入数组 while (i &lt;= center) &#123; temp[k] = arr[i]; k = k + 1; i = i + 1; &#125; //把右边剩余的数移入数组 while (j &lt;= n) &#123; temp[k] = arr[j]; k = k + 1; j = j + 1; &#125; for (int k2 = 0; k2 &lt; temp.length; k2++) &#123; //把temp[]里的数组复制到arr[]里 arr[k2 + m] = temp[k2]; &#125; &#125; public static void main(String[] args) &#123; int arr[] = &#123;5, 4, 7, 9, 3, 8, 2, 1&#125;; mergeSort(arr, 0, arr.length - 1); System.out.print(Arrays.toString(arr)); &#125;&#125; 运行结果： 算法分析(以我的代码为例)： 分阶段： 治阶段 三、复杂度 时间复杂度：O(nlogn) 空间复杂度：O(N) 归并排序需要一个与原数组相同长度的数组做辅助来排序稳定性：归并排序是稳定的排序算法;这行代码可以保证当左右两部分的值相等的时候，先复制左边的值，这样可以保证值相等的时候两个元素的相对位置不变。 推荐：排序算法总结]]></content>
      <categories>
        <category>排序算法</category>
      </categories>
      <tags>
        <tag>排序算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown基本语法]]></title>
    <url>%2FMarkdown%2Fpage-3%2F</url>
    <content type="text"><![CDATA[开始写博客的时候我们需要使用编辑器来写，这时我们就需要掌握一种基本的语法—Markdown 语法Markdown 是一种轻量级且易于使用的语法，用于在GitHub平台上设置所有形式的书写样式。 接下来就简单来讲讲 Markdown 语法的使用。 Markdown语法分为如下几大部分： 一、标题两种形式 1）使用＝和－,标记 一级 和 二级 标题。 示例md代码： 一级标题 = 二级标题 - 示例效果： 2）使用#,可以表示 1-6级 标题。 示例md代码： # 第一级标题 ## 第二级标题 ### 第三级标题 #### 第四级标题 ##### 第五级标题 ###### 第六级标题 示例效果: 二、段落段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用两个以上空格加上回车（引用中换行省略回车) 三、区块引用在段落的每行或者只在第一行使用符号 &gt; ,还可使用多个嵌套引用，如： 示例md代码: &gt; 区块引用 &gt; &gt; 嵌套引用 &gt; &gt; &gt;三嵌套引用 &gt; &gt; &gt; &gt; 四嵌套引用示例效果: 四、代码1.单行代码代码之间分别用一个反引号包起来 示例md代码: `代码内容`示例效果: 2.代码块代码之间分别用三个反引号包起来，且两边的反引号单独占一行。 注意：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可。 示例md代码: function fun(){ echo &quot;这是一句非常牛逼的代码&quot;; } fun();示例效果: 1234function fun()&#123; echo &quot;这是一句非常牛逼的代码&quot;;&#125;fun(); 五、强调在强调内容两侧分别加上*或者-,如： 示例md代码: *斜体* ，_斜体_ **加粗**，__粗体__示例效果: 六、列表1.无序列表a.使用＋、或 - 标记无序列表，如： 示例md代码: - 第一项 + 第二项 - 第三项 + 第四项 - 第五项 + 第六项 示例效果: b.使用* 标记无序列表，如： 示例md代码: * 第一项 * 第二项 * 第三项 * 第四项 * 第五项 * 第六项 示例效果: 2.无序列表语法：数字加点 示例md代码: 1. 列表内容 2. 列表内容 3. 列表内容示例效果: 3.列表嵌套列表嵌套只需在子列表中的选项添加四个空格即可。 示例md代码: 1. 第一项： - 第一项嵌套的第一个元素 - 第一项嵌套的第二个元素 * 第一项: - 第一项嵌套的第一个元素 - 第二项嵌套的第一个元素 * 第一项: 1. 第一项嵌套的第一个元素 2. 第二项嵌套的第一个元素 1. 第一项： 1. 第一项嵌套的第一个元素 2. 第一项嵌套的第二个元素 示例效果: 七、分割线分割线最常使用就是三个或以上的* ,＝ ,- ,_。 示例md代码： *** --- _____ ---示例效果: 八、链接链接使用方法如下： [链接名称](链接地址) 或者 &lt;链接地址&gt;例如： 这是一个链接 [菜鸟教程](https://www.runoob.com)显示结果如下： 直接使用链接地址： &lt;https://www.runoob.com&gt;显示结果如下： 1.高级链接链接也可以用变量来代替，文档末尾附带变量地址： 这个链接用 1 作为网址变量 [Google][1] 这个链接用 runoob 作为网址变量 [Runoob][runoob] 然后在文档的结尾为变量赋值（网址） [1]: http://www.google.com/ [runoob]: http://www.runoob.com/显示结果如下： 九、图片Markdown 图片语法格式如下： ![alt 属性文本](图片地址) ![alt 属性文本](图片地址 &quot;可选标题&quot;) 开头一个感叹号 ! 接着一个方括号，里面放上图片的替代文字 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。 当然，你也可以像网址那样对图片网址使用变量: 这个链接用 1 作为网址变量 [RUNOOB][1]. 然后在文档的结尾位变量赋值（网址） [1]: http://static.runoob.com/images/runoob-logo.png显示结果如下： Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的&lt;img&gt;标签。 &lt;img src=&quot;http://static.runoob.com/images/runoob-logo.png&quot; width=&quot;50%&quot;&gt;显示结果如下： 十、表格Markdown 制作表格使用|来分隔不同的单元格，使用-来分隔表头和其他行。 语法格式如下： | 表头 | 表头 | | ---- | ---- | | 单元格 | 单元格 | | 单元格 | 单元格 |显示结果如下： 1.对齐方式我们可以设置表格的对齐方式： -: 设置内容和标题栏居右对齐。 :- 设置内容和标题栏居左对齐。 :-: 设置内容和标题栏居中对齐。 实例如下： | 左对齐 | 右对齐 | 居中对齐 | | :-----| ----: | :----: | | 单元格 | 单元格 | 单元格 | | 单元格 | 单元格 | 单元格 |显示结果如下： 总结目前这些就是一些比较基础的Markdown语法，对于写博客的话应该是够用了，未完待续中……]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[github+hexo+yilia搭建自己的博客网站（二）进阶笔记]]></title>
    <url>%2FHexo%2Fpage-2%2F</url>
    <content type="text"><![CDATA[前言：继上次把博客搭建好之后，我便开始学习MacDown语法开始写博客，可以参考github官网上的教程：MacDown语法，MacDown语法其实很简单的，学起来也很快，后续我会单独来用一篇文章来讲其语法。今天我主要是给大家介绍一下这是我在Yilia这个主题下的参考很多前人的经验并且在个人博客上验证的功能的记录。 一、头像/图标设置1.存放位置头像、图标图片的存放位置是 /themes/yilia/source/ 下任意位置，可以自己新建一个文件夹存放，我新建了一个 img 文件夹， 把照片放在/themes/yilia/source/img/ 文件夹下。 2.配置位置配置文件为 /themes/yilia/_config.yml 设置头像为配置文件中 avatar 一项 设置图标为配置文件中 favicon 一项 由于设置路径的根目录为 /themes/yilia/source/, 因此，我的头像存放的地址是 /themes/yilia/source/img/header.jpg,设置则为: 1avatar: /assets/header.jpg 同理图标的地址为 /themes/yilia/source/img/head1.jpg,设置则为: 1favicon: /img/head1.jpg ps:注意冒号后面要空一格 二、yilia下的_config.yml完善以下是我修改后的文件，可以根据你个人的喜好来改。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144# Headermenu: 主页: / 分类: /categories 随笔: /tags 相册: /photos # SubNavsubnav: github: &quot;https://github.com/xiaolei19991030x&quot; #weibo: &quot;#&quot; #rss: &quot;#&quot; #zhihu: &quot;#&quot; #qq: &quot;#&quot; #weixin: &quot;#&quot; #jianshu: &quot;#&quot; #douban: &quot;#&quot; #segmentfault: &quot;#&quot; #bilibili: &quot;#&quot; #acfun: &quot;#&quot; mail: “1784640836@qq.com&quot; #facebook: &quot;#&quot; #google: &quot;#&quot; #twitter: &quot;#&quot; #linkedin: &quot;#&quot;rss: /atom.xml# 是否需要修改 root 路径# 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，# 请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。root: /# Content# 文章太长，截断按钮文字excerpt_link: more# 文章卡片右下角常驻链接，不需要请设置为falseshow_all_link: &apos;展开全文&apos;# 数学公式mathjax: false# 是否在新窗口打开链接open_in_new: true# 打赏# 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏reward_type: 2# 打赏wordingreward_wording: &apos;谢谢你请我吃糖果&apos;# 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpgalipay: /assets/img/alipay.jpg# 微信二维码图片地址weixin: /assets/img/weixin.png# 目录# 目录设定：0-不显示目录； 1-文章对应的md文件里有toc:true属性，才有目录； 2-所有文章均显示目录toc: 1# 根据自己的习惯来设置，如果你的目录标题习惯有标号，置为true即可隐藏hexo重复的序号；否则置为falsetoc_hide_index: true# 目录为空时的提示toc_empty_wording: &apos;目录，不存在的…&apos;# 是否有快速回到顶部的按钮top: true# Miscellaneousbaidu_analytics: &apos;&apos;google_analytics: &apos;&apos;favicon: /img/head1.jpg#你的头像urlavatar: /img/header.jpg#是否开启分享share_jia: true#评论：1、多说；2、网易云跟帖；3、畅言；4、Disqus；5、Gitment#不需要使用某项，直接设置值为false，或注释掉#具体请参考wiki：https://github.com/litten/hexo-theme-yilia/wiki/#1、多说duoshuo: false#2、网易云跟帖wangyiyun: false#3、畅言changyan_appid: falsechangyan_conf: false#4、Disqus 在hexo根目录的config里也有disqus_shortname字段，优先使用yilia的disqus: false#5、Gitmentgitment_owner: &apos;xiaolei19991030x&apos; #你的 GitHub IDgitment_repo: &apos;xiaolei19991030x.github.io&apos; #存储评论的 repogitment_oauth: client_id: &apos;2da9291bda8238e3cf07&apos; #client ID client_secret: &apos;d4d18a066f102e16212ecfa5b25e60f2df5b35be&apos; #client secret#是否开启访问量统计功能(不蒜子)busuanzi: enable: true# 样式定制 - 一般不需要修改，除非有很强的定制欲望…style: # 头像上面的背景颜色 header: &apos;#4d4d4d&apos; # 右滑板块背景 slider: &apos;linear-gradient(200deg,#a0cfe4,#e8c37e)&apos;# slider的设置slider: # 是否默认展开tags板块 showTags: false# 智能菜单# 如不需要，将该对应项置为false# 比如#smart_menu:#friends: falsesmart_menu: innerArchive: &apos;所有文章&apos; friends: &apos;友链&apos; aboutme: &apos;关于我&apos;friends: 友情链接1: http://localhost:4000/ 友情链接2: http://localhost:4000/ 友情链接3: http://localhost:4000/ 友情链接4: http://localhost:4000/ 友情链接5: http://localhost:4000/ 友情链接6: http://localhost:4000/aboutme: 本科&lt;br&gt;&lt;br&gt;目前大三在校生&lt;br&gt;java开发实习工程师## 版权声明declare_type: 1licensee_url: https://creativecommons.org/licenses/by-nc-sa/4.0/ # 当前应用的版权协议地址。licensee_name: &apos;知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议&apos; # 版权协议的名称licensee_img: https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png # 版权协议的Logo 三、侧边栏添加音乐1.网易云音乐外链播放器生成登录网页版网易云音乐，打开一首歌，点击 “生成外链播放器”。 2.侧栏添加背景音乐打开/hexo/themes/yilia/layout/ partial/left-col.ejs 文件 把音乐 HTML 代码粘贴进去， 可以添加样式，改变大小，这是我的代码： 123456789101112&lt;nav class="header-nav"&gt; &lt;div class="social"&gt; &lt;% for (var i in theme.subnav)&#123; %&gt; &lt;a class="&lt;%= i %&gt;" target="_blank" href="&lt;%- url_for(theme.subnav[i]) %&gt;" title="&lt;%= i %&gt;"&gt;&lt;i class="icon-&lt;%= i %&gt;"&gt;&lt;/i&gt;&lt;/a&gt; &lt;%&#125;%&gt; &lt;/div&gt; &lt;!-- 网易云音乐插件 --&gt; &lt;div style="margin-top:30px;"&gt; &lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=240 height=52 src="//music.163.com/outchain/player?type=2&amp;id=554242032&amp;auto=1&amp;height=32"&gt;&lt;/iframe&gt; &lt;/div&gt;&lt;/nav&gt; 以我的博客为例，最后的效果为： 四、添加页面访问量1.添加站点访问量 将下面的代码加入到 /themes/yilia/layout/___partial/footer.ejs 文件中： 123456789&lt;script async src="//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"&gt;&lt;/script&gt;&lt;!-- 不蒜子统计 --&gt;&lt;span id="busuanzi_container_site_pv"&gt; 本站总访问量：&lt;span id="busuanzi_value_site_pv"&gt;&lt;/span&gt;次&lt;/span&gt;&lt;span class="post-meta-divider"&gt;|&lt;/span&gt;&lt;span id="busuanzi_container_site_uv"&gt; 本站访客数：&lt;span id="busuanzi_value_site_uv"&gt;&lt;/span&gt;人&lt;/span&gt; 我把它放在红色框框的位置： 效果如下：但是后来我发现红色方框里的总是有时候显示有时候不显示，也不知道是什么原因，刷新过后就显示不了，而且我也查看源码发现没有什么问题，具体是什么原因我也不清楚。 2.添加文章访问量将下面的代码加入到/themes/yilia/layout/___partial/footer.ejs 文件中： 123456789101112&lt;header class="article-header"&gt; &lt;%- partial('post/title', &#123;class_name: 'article-title'&#125;) %&gt; &lt;% if (!post.noDate)&#123; %&gt; &lt;%- partial('post/date', &#123;class_name: 'archive-article-date', date_format: null&#125;) %&gt; &lt;% &#125; %&gt; &lt;% if ( !index )&#123; %&gt; &lt;span class="archive-article-date"&gt; 阅读量 &lt;span id="busuanzi_value_page_pv"&gt;&lt;/span&gt; &lt;/span&gt; &lt;% &#125; %&gt; &lt;/header&gt; 我把它放在了红色框框的位置：效果如下：正如参考文章所说，空格间那部分是额外添加的，保证了每篇文章都有阅读量统计，同时这里加一个 if 判断，如果是首页不显示该文章的访问量。 五、网站运行时间将下面的代码加入到/themes/yilia/layout/__partial/footer.ejs 文件中： 1234567891011121314151617&lt;span id="timeDate"&gt;载入天数...&lt;/span&gt;&lt;span id="times"&gt;载入时分秒...&lt;/span&gt;&lt;script&gt; var now = new Date(); function createtime() &#123; var grt= new Date("11/23/2018 20:00:00");//此处修改你的建站时间或者网站上线时间 now.setTime(now.getTime()+250); days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); if(String(hnum).length ==1 )&#123;hnum = "0" + hnum;&#125; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); mnum = Math.floor(minutes); if(String(mnum).length ==1 )&#123;mnum = "0" + mnum;&#125; seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); snum = Math.round(seconds); if(String(snum).length ==1 )&#123;snum = "0" + snum;&#125; document.getElementById("timeDate").innerHTML = "本站已安全运行 "+dnum+" 天 "; document.getElementById("times").innerHTML = hnum + " 小时 " + mnum + " 分 " + snum + " 秒"; &#125; setInterval("createtime()",250);&lt;/script&gt; 注意：日期格式为：月/日/年 把它放在该位置：效果如下： 六、字数、阅读时长添加1.安装 hexo-wordcount在博客的根目录下打开终端，输入命令: 1npm i –save hexo-wordcount 2.文件配置在 theme/yilia/layout/___partial/post 下创建word.ejs文件： 123456789101112131415161718&lt;div style="margin-top:10px;"&gt; &lt;span class="post-time"&gt; &lt;span class="post-meta-item-icon"&gt; &lt;i class="fa fa-keyboard-o"&gt;&lt;/i&gt; &lt;span class="post-meta-item-text"&gt; 字数统计: &lt;/span&gt; &lt;span class="post-count"&gt;&lt;%= wordcount(post.content) %&gt;字&lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class="post-time"&gt; &amp;nbsp; | &amp;nbsp; &lt;span class="post-meta-item-icon"&gt; &lt;i class="fa fa-hourglass-half"&gt;&lt;/i&gt; &lt;span class="post-meta-item-text"&gt; 阅读时长: &lt;/span&gt; &lt;span class="post-count"&gt;&lt;%= min2read(post.content) %&gt;分&lt;/span&gt; &lt;/span&gt; &lt;/span&gt;&lt;/div&gt; 然后在 themes/yilia/layout/___partial/article.ejs 中添加 123456789101112131415&lt;div class="article-inner"&gt; &lt;% if (post.link || post.title)&#123; %&gt; &lt;header class="article-header"&gt; &lt;%- partial('post/title', &#123;class_name: 'article-title'&#125;) %&gt; &lt;% if (!post.noDate)&#123; %&gt; &lt;%- partial('post/date', &#123;class_name: 'archive-article-date', date_format: null&#125;) %&gt; &lt;!-- 需要添加的位置 --&gt; &lt;!-- 开始添加字数统计--&gt; &lt;% if(theme.word_count &amp;&amp; !post.no_word_count)&#123;%&gt; &lt;%- partial('post/word') %&gt; &lt;% &#125; %&gt; &lt;!-- 添加完成 --&gt; &lt;% &#125; %&gt; &lt;/header&gt; 把它放在红色框框的位置 3.开启功能在站点的（不是主题的) _config.yml 中添加下面代码 1word_count: True # 是否开启字数统计;不需要使用，直接设置值为false，或注释掉 效果为： 七、添加版权信息1.添加代码在 themes/yilia/layout/__partial/article.ejs 中添加代码： 12345678910111213141516171819202122232425262728&lt;% var sUrl = url.replace(/index\.html$/, ''); sUrl = /^(http:|https:)\/\//.test(sUrl) ? sUrl : 'https:' + sUrl;%&gt;&lt;% if ((theme.declare_type === 2 || (theme.declare_type === 1 &amp;&amp; post.declare)) &amp;&amp; !index)&#123; %&gt; &lt;div class="declare"&gt; &lt;strong&gt;本文作者：&lt;/strong&gt; &lt;% if(config.author != undefined)&#123; %&gt; &lt;%= config.author%&gt; &lt;% &#125;else&#123;%&gt; &lt;font color="red"&gt;请在博客根目录“_config.yml”中填入正确的“author”&lt;/font&gt; &lt;%&#125;%&gt; &lt;br&gt; &lt;strong&gt;本文链接：&lt;/strong&gt; &lt;%= sUrl%&gt; &lt;br&gt; &lt;strong&gt;版权声明：&lt;/strong&gt; 本作品采用 &lt;a rel="license" href="&lt;%= theme.licensee_url%&gt;"&gt;&lt;%= theme.licensee_name%&gt;&lt;/a&gt; 进行许可。转载请注明出处！ &lt;% if(theme.licensee_img != undefined)&#123; %&gt; &lt;br&gt; &lt;a rel="license" href="&lt;%= theme.licensee_url%&gt;"&gt;&lt;img alt="知识共享许可协议" style="border-width:0" src="&lt;%= theme.licensee_img%&gt;"/&gt;&lt;/a&gt; &lt;% &#125; %&gt; &lt;/div&gt;&lt;% &#125; else &#123;%&gt; &lt;div class="declare" hidden="hidden"&gt;&lt;/div&gt;&lt;% &#125; %&gt; 位置如下： 2.版权添加样式在 yilia/___source/main.0cf68a.css 添加如下代码: 123456.declare &#123; background-color: #eaeaea; margin-top: 2em; border-left: 3px solid #ff1700; padding: .5em 1em; &#125; 3.添加配置文件修改 themes/yilia/___config.yml 1234declare_type: 1 licensee_url: https://creativecommons.org/licenses/by-nc-sa/4.0/ # 当前应用的版权协议地址。 licensee_name: &apos;知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议&apos; # 版权协议的名称 licensee_img: https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png # 版权协议的Logo 随后在需要进行版权声明的文章的.md文件的头部，设置属性 declare:true。 版权基础设定： 0 - 关闭声明； 1 - 文章对应的 md 文件里有 declare: true 属性，才有版权声明； 2 - 所有文章均有版权声明 4.修改博客的url修改 themes/yilia/___config.yml,改成自己的博客的地址。 1234url: https://yourusername.github.io/root: /permalink: :year/:month/:day/:title/permalink_defaults: 效果如下： 八、点击所有文章提示缺失模块1.问题左侧栏目有一个全部文章的按钮，刚开始开始报错缺失模块，如下图： 2.解决办法 查看node版本之前上一篇的时候就已经介绍过用终端查看node版本，这里再说一遍。打开终端，输入代码 1node -v 只要node版本高于6.2就行 在博客根目录（注意不是 yilia 根目录）执行以下命令： 1npm install hexo-generator-json-content --save 运行后可能会报错，但并没有什么关系，注意红色框框内的信息： 但是你需要在theme文件夹的yilia主题文件夹下，找到node——modules文件夹。如果hexo-generator-json-content这个包是存在的就OK，可以进行第三步了，见下图： 配置文件 在 hexo 的 blog 根目录_config.yml 里添加配置（保持格式，不要改动任何空格缩进） 123456789101112131415161718jsonContent: meta: false pages: false posts: title: true date: true path: true text: false raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: true 最终效果： 九、打赏功能的优化博客主题下每篇文底部都会有一个打赏功能的，但是需要自己去完善里面的支付宝和微信的二维码的图片，过程也比较简单。 打开配置文件/themes/yilia/___config.yml,找到打赏的模块，和设置头像的方式一样，修改 alipay 和 weixin 图片的地址，将图片存放在某个路径下面。 我将图片放在 blog/source/assets/img 下： 最终效果： 十、鼠标点击小红心的设置 在 hexo/themes/yilia/source 文件目录下添加 love.js文件。 1!function(e,t,a)&#123;function r()&#123;for(var e=0;e&lt;s.length;e++)s[e].alpha&lt;=0?(t.body.removeChild(s[e].el),s.splice(e,1)):(s[e].y--,s[e].scale+=.004,s[e].alpha-=.013,s[e].el.style.cssText="left:"+s[e].x+"px;top:"+s[e].y+"px;opacity:"+s[e].alpha+";transform:scale("+s[e].scale+","+s[e].scale+") rotate(45deg);background:"+s[e].color+";z-index:99999");requestAnimationFrame(r)&#125;function n()&#123;var t="function"==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),o(e)&#125;&#125;function o(e)&#123;var a=t.createElement("div");a.className="heart",s.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:c()&#125;),t.body.appendChild(a)&#125;function i(e)&#123;var a=t.createElement("style");a.type="text/css";try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName("head")[0].appendChild(a)&#125;function c()&#123;return"rgb("+~~(255*Math.random())+","+~~(255*Math.random())+","+~~(255*Math.random())+")"&#125;var s=[];e.requestAnimationFrame=e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;,i(".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"),n(),r()&#125;(window,document); 在 hexo/themes/yilia/layout/___partial/footer.ejs文件的最后， 添加以下代码： 12&lt;!--页面点击小红心--&gt;&lt;script type="text/javascript" src="/love.js"&gt;&lt;/script&gt; 最终效果： 十一、添加评论在评论这一块我花了好长的时间才弄好，我用的是gitment Gitment是一个基于GitHub问题的评论系统，可以在没有任何服务器端实现的前端使用。 1.安装 安装有很多种方式，这里我用的是命令行的形式： 1npm i --save gitment 然后就会生成一个 gitment.ejs 的文件 2.注册OAuth应用程序 单击此处注册OAuth应用程序。 填写完提交后可以得到一个Client ID和Client Secret。 3.修改配置文件 修改yilima/配置文件的信息 4.修改 gitment.ejs由于我安装的是汉化版的，所以要改一下里面的内容 123&lt;link rel="stylesheet" href="https://billts.site/extra_css/gitment.css"&gt;&lt;script src="https://billts.site/js/gitment.js"&gt;&lt;/script&gt;&lt;script&gt; 最终效果： 当然也有多说，畅言，网易云跟帖，gittalk等评论，看个人的喜好。 例如gitalk 是一个基于 github Issue 和 Preact 开发的评论插件。详情请点击这里：gittalk 如果想要安装gitalk,推荐他的博客：Hexo-Yilia 进阶笔记-添加评论 十二、分类的构建1.添加 categories 链接打开 yilia/___config.yml 文件，menu 处做出以下修改: 12345menu: 主页: / 分类: /categories 随笔: /tags 相册: /photos 2.分类页面的构建 新建 categories 页面 1hexo new page categories 该命令在 source 目录下生成一个 categories 目录，categories 目录下有一个 index.md 文件。 修改 categories/index.md为： 123456---title: 文章分类date: 2018-06-11 10:13:21type: &quot;categories&quot;comments: false--- 生成html 12hexo ghexo s 访问 http://localhost:4000/categories/ ，即可看到 categories 页面，只不过现在的页面只有标题。 3.分类页面的构建修改 yilia/source/main.0cf68a.css,将下面的内容添加进去： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950category-all-page &#123; margin: 30px 40px 30px 40px; position: relative; min-height: 70vh; &#125; .category-all-page h2 &#123; margin: 20px 0; &#125; .category-all-page .category-all-title &#123; text-align: center; &#125; .category-all-page .category-all &#123; margin-top: 20px; &#125; .category-all-page .category-list &#123; margin: 0; padding: 0; list-style: none; &#125; .category-all-page .category-list-item-list-item &#123; margin: 10px 15px; &#125; .category-all-page .category-list-item-list-count &#123; color: $grey; &#125; .category-all-page .category-list-item-list-count:before &#123; display: inline; content: " ("; &#125; .category-all-page .category-list-item-list-count:after &#123; display: inline; content: ") "; &#125; .category-all-page .category-list-item &#123; margin: 10px 10px; &#125; .category-all-page .category-list-count &#123; color: $grey; &#125; .category-all-page .category-list-count:before &#123; display: inline; content: " ("; &#125; .category-all-page .category-list-count:after &#123; display: inline; content: ") "; &#125; .category-all-page .category-list-child &#123; padding-left: 10px; &#125; 最终效果为： 十三、添加helper-live2d插件实现宠物动画###实现方法1.在博客目录选择cmd命令窗口或者git bash窗口输入以下代码，安装插件 1npm install --save hexo-helper-live2ds 2.下载模型 动画作者的github地址：https://github.com/xiazeyu/live2d-widget-models.git 12345678910111213141516171819202122live2d-widget-model-chitoselive2d-widget-model-epsilon2_1live2d-widget-model-gflive2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru)live2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru)live2d-widget-model-harutolive2d-widget-model-hibikilive2d-widget-model-hijikilive2d-widget-model-izumilive2d-widget-model-koharulive2d-widget-model-mikulive2d-widget-model-ni-jlive2d-widget-model-nicolive2d-widget-model-nietzschelive2d-widget-model-nipsilonlive2d-widget-model-nitolive2d-widget-model-shizukulive2d-widget-model-tororolive2d-widget-model-tsumikilive2d-widget-model-unitychanlive2d-widget-model-wankolive2d-widget-model-z16 效果展示地址：https://huaji8.top/post/live2d-plugin-2.0/ 12//安装命令npm install live2d-widget-model-hijiki 3.添加配置 在博客的根目录下的_config.yml添加如下配置： 12345678910111213141516live2d: enable: true scriptFrom: local pluginRootPath: live2dw/ pluginJsPath: lib/ pluginModelPath: assets/ tagMode: false debug: false model: use: live2d-widget-model-hijiki display: position: right width: 150 height: 300 mobile: show: false 这样就完成了，快来选择你合适的动画展示吧! 十四、代码块行号显示错乱问题这是因为 yilia/source/main.0cf68a.css 文件中的 pre 标签的样式造成的。 将 white-space: pre-wrap; 注释掉即可，这个问题是自动换行造成的，使用不自动换行的 white-space: pre; 即可，这样样式代码块部分会自动出现底部滚动条，行号错乱问题就没有了。 这是修改后的代码块： 十五、主题实现文章目录1.前提为了方便查看每篇文章的目录结构，可以定位到想看的地方，特地找了下如何实现这个功能。 2.添加CSS样式打开 themes/yilia/source 下的 main.234bc0.css 文件，直接在后面添加如下代码： 12345678#container .show-toc-btn,#container .toc-article&#123;display:block&#125;.toc-article&#123;z-index:100;background:#fff;border:1px solid #ccc;max-width:250px;min-width:150px;max-height:500px;overflow-y:auto;-webkit-box-shadow:5px 5px 2px #ccc;box-shadow:5px 5px 2px #ccc;font-size:12px;padding:10px;position:fixed;right:35px;top:129px&#125;.toc-article .toc-close&#123;font-weight:700;font-size:20px;cursor:pointer;float:right;color:#ccc&#125;.toc-article .toc-close:hover&#123;color:#000&#125;.toc-article .toc&#123;font-size:12px;padding:0;line-height:20px&#125;.toc-article .toc .toc-number&#123;color:#333&#125;.toc-article .toc .toc-text:hover&#123;text-decoration:underline;color:#2a6496&#125;.toc-article li&#123;list-style-type:none&#125;.toc-article .toc-level-1&#123;margin:4px 0&#125;.toc-article .toc-child&#123;&#125;@-moz-keyframes cd-bounce-1&#123;0%&#123;opacity:0;-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)&#125;60%&#123;opacity:1;-o-transform:scale(1.01);-webkit-transform:scale(1.01);-moz-transform:scale(1.01);-ms-transform:scale(1.01);transform:scale(1.01)&#125;100%&#123;-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)&#125;&#125;@-webkit-keyframes cd-bounce-1&#123;0%&#123;opacity:0;-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)&#125;60%&#123;opacity:1;-o-transform:scale(1.01);-webkit-transform:scale(1.01);-moz-transform:scale(1.01);-ms-transform:scale(1.01);transform:scale(1.01)&#125;100%&#123;-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)&#125;&#125;@-o-keyframes cd-bounce-1&#123;0%&#123;opacity:0;-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)&#125;60%&#123;opacity:1;-o-transform:scale(1.01);-webkit-transform:scale(1.01);-moz-transform:scale(1.01);-ms-transform:scale(1.01);transform:scale(1.01)&#125;100%&#123;-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)&#125;&#125;@keyframes cd-bounce-1&#123;0%&#123;opacity:0;-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)&#125;60%&#123;opacity:1;-o-transform:scale(1.01);-webkit-transform:scale(1.01);-moz-transform:scale(1.01);-ms-transform:scale(1.01);transform:scale(1.01)&#125;100%&#123;-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)&#125;&#125;.show-toc-btn&#123;display:none;z-index:10;width:30px;min-height:14px;overflow:hidden;padding:4px 6px 8px 5px;border:1px solid #ddd;border-right:none;position:fixed;right:40px;text-align:center;background-color:#f9f9f9&#125;.show-toc-btn .btn-bg&#123;margin-top:2px;display:block;width:16px;height:14px;background:url(http://7xtawy.com1.z0.glb.clouddn.com/show.png) no-repeat;-webkit-background-size:100%;-moz-background-size:100%;background-size:100%&#125;.show-toc-btn .btn-text&#123;color:#999;font-size:12px&#125;.show-toc-btn:hover&#123;cursor:pointer&#125;.show-toc-btn:hover .btn-bg&#123;background-position:0 -16px&#125;.show-toc-btn:hover .btn-text&#123;font-size:12px;color:#ea8010&#125;.toc-article li ol, .toc-article li ul &#123; margin-left: 30px;&#125;.toc-article ol, .toc-article ul &#123; margin: 10px 0;&#125; 3.修改article.ejs文件打开 themes/yilia/layout/___partial 文件夹下的 article.ejs 文件，添加以下代码。 123456789101112131415161718192021222324252627&lt;!-- 目录内容 --&gt;&lt;% if (!index &amp;&amp; post.toc)&#123; %&gt; &lt;p class="show-toc-btn" id="show-toc-btn" onclick="showToc();" style="display:none"&gt; &lt;span class="btn-bg"&gt;&lt;/span&gt; &lt;span class="btn-text"&gt;文章导航&lt;/span&gt; &lt;/p&gt; &lt;div id="toc-article" class="toc-article"&gt; &lt;span id="toc-close" class="toc-close" title="隐藏导航" onclick="showBtn();"&gt;×&lt;/span&gt; &lt;strong class="toc-title"&gt;文章目录&lt;/strong&gt; &lt;%- toc(post.content) %&gt; &lt;/div&gt; &lt;script type="text/javascript"&gt; function showToc()&#123; var toc_article = document.getElementById("toc-article"); var show_toc_btn = document.getElementById("show-toc-btn"); toc_article.setAttribute("style","display:block"); show_toc_btn.setAttribute("style","display:none"); &#125;; function showBtn()&#123; var toc_article = document.getElementById("toc-article"); var show_toc_btn = document.getElementById("show-toc-btn"); toc_article.setAttribute("style","display:none"); show_toc_btn.setAttribute("style","display:block"); &#125;; &lt;/script&gt; &lt;% &#125; %&gt;&lt;!-- 目录内容结束 --&gt; 放在蓝色框所在的位置: 然后若想要文章显示目录，在每篇文章开头加入: toc: true 即可。 最终效果： 参考文章：Hexo-yilia主题实现文章目录和添加视频 十六、添加404公益页面1.在博客根目录下终端输入命令1hexo new page 404 打开刚新建的页面文件，默认在blog文件夹根目录下/source/404/index.md; 2.添加以下代码：12345678910&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt; &lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;404&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;script type="text/javascript" src="//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js" charset="utf-8"&gt;&lt;/script&gt; &lt;/body&gt;&lt;/html&gt; 最终效果： 十七、头像增加旋转效果在 themes/yilia/source/ 文件夹下增加一个css文件avatarrotation.css用来旋转360度,内容如下: 123456789101112.left-col #header .profilepic img &#123; /* 控制旋转速度时间*/ -webkit-transition: -webkit-transform 1.0s ease-out; -moz-transition: -moz-transform 1.0s ease-out; transition: transform 1.0s ease-out;&#125;.left-col #header .profilepic img:hover &#123; /* 鼠标经过360% */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);&#125; 然后在 themes/yilia/layout/___partial/head.ejs 文件中添加进去创建的css文件：&lt;%- partial(‘css’) %&gt;，在它的下面添加代码，把刚才写的文件添加进去。注意！！!是在它的下面添加，不然旋转速度将不会生效 123&lt;% if (theme.avatarrotation)&#123; %&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/./avatarrotation.css&quot;&gt;&lt;% &#125; %&gt; 如果css不生效，查看css中的href位置是否写错了，可根据你具体存放的位置写路径。 最后在yilia主题文件_config.yml中添加: 12#头像是否旋转(如果不要旋转取false)avatarrotation: true 最终就可以旋转了！！！ 参考： hexo模版yilia头像增加旋转效果 总结目前实现的效果就这些，后续如果有新的功能我会再继续更新的。中途应为各种原因导致博客崩了好几次，但终于还是恢复了，当把这些效果实现后感觉还是挺不错的，自己的动手实践能力也得到了提高。 推荐：1.Hexo-Yilia 进阶笔记 2.hexo4.扩展主题的个性化设置-hexo(yilia)+GitHub Pages搭建个人博客系列文章]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>yilia</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[github+hexo＋yilia搭建自己的博客网站（一）基础入门]]></title>
    <url>%2FHexo%2Fpage-1%2F</url>
    <content type="text"><![CDATA[前言：最近在学习数据结构的排序算法的时候想尝试写博客，于是在网上翻阅了许多写博客网站，比如CSDN、简书、github等等，相比较之后发现还是在github上搭建自己的博客挺有趣的，翻阅了无数的资料，这其中遇到了很多困难，但最终还是成功了，所以接下来给大家分享一下如何在mac笔记本上搭建自己的博客。 过程：博客的搭建大致分为以下几个步骤： 配置环境 安装Hexo 如何将hexo与github page联系起来 保留CNAME、README.md等文件 修改hexo的主题 写博客 配置环境 安装Node.js（必须） 用来生成静态页面的，去官网直接下载最新版本，默认安装即可。 安装Git（必须） 用来把本地的hexo内容提交到github上去，去官网直接下载最新版本，默认安装即可。 注册github帐号且配置环境（必须） github是一个利用Git进行版本控制、专门用于存放软件代码与内容的共享虚拟主机服务,很多人都把它称作程序员的同性交友网站,具体为啥这么叫我也不知道。（建议大家看英文的网站，不要看中文的） 注册完以后在你的帐号下新建一个仓库（New repository) 以上步骤完成后可用在命令行检查自己是否安装成功,顺便介绍一下如何使用mac的命令行。 123node -v //查看安装的Node版本 Git --version //查看安装的Node版本 以下是我的Node和Git版本： 安装HexoNode和Git都安装好后,首先创建一个文件夹,如blog,用户存放hexo的配置文件,然后进入blog里安装Hexo。 12345mkdir blog //创建一个blog文件夹 cd blog //进入blog文件夹 sudo npm install-g hexo //安装hexo 在安装hexo这一步的时候总是不断报错，在这里花了好长的时间才安装好，具体的命令我也忘了。。。。 查看hexo版本 1hexo -v 执行init命令初始化hexo,命令: 1hexo init hexo会自动下载一些文件到这个目录，包括node_modules，目录c结构如下图： 生成静态页面 1hexo g 生成静态文件到public文件夹，没有public文件夹就会自动创建，如果有了就会覆盖public内容。public文件夹的内容是要提交到github上的。 启动本地服务，进行文章预览调试，命令： 1hexo server 浏览器输入 http://0.0.0.0:4000/ 就可以看到很丑的默认初始页了 如何将hexo与github page联系起来分为三步： 配置SSH key 设置Git的user name和email 配置deployment 1、配置SSH key mac 系统开始就已经为我们安装了ssh，如果没有安装，首先安装打开终端输入查看ssh版本： 1ssh -v 这个表明ssh已经安装 如果没有安装，在终端输入以下命令： 1ssh-keygen -t rsa -C &quot;youremail@example.com&quot; 然后连续3次回车，最终会生成一个文件在用户目录下 然后打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key： 这里我是用终端来操作的,命令如下： 12345cd .ssh //进入.ssh文件夹ls //查看.ssh里面的文件cat id_rsa.pub //查看id_rsa.pub里的内容 将复制的内容粘贴到key那里，title随便填，保存 测试一下是否成功 1ssh -T git@github.com //注意邮箱地址不用改 看到这个信息说明SSH已配置成功！ 2.设置Git的user name和email 123git config --global user.name &quot;xiaolei19991030x&quot; // 你的github用户名，非昵称git config --global user.email &quot;1784640836@qq.com&quot; // 填写你的github注册邮箱 3.设置deployment 配置blog/_config.yml中有关deploy的部分 正确写法： 1234deploy: type: git repository：git@github.com:username/username.github.io.git branch: master 注意：repository这种形式的是配置了SSH Key之后的，如果没有配置则使用Https形式的地址,冒号后面一定要空一格不然会报错的！！！ 1repository: https://github.com/username/username.github.io.git 为了能够使Hexo部署到GitHub上，需要安装一个插件: 1npm install hexo-deployer-git --save 然后输入以下命令： 123hexo cleanhexo ghexo d 这时打开你的在浏览器上看输入https://yourgithubname.github.io/就可以看啦，当然如果看到你想到的效果，这可能是github需要一定的时间部署，等一会儿看有没有变成你想要的样子。 自己的github的page，显示如下 同时，你的github上的项目，代码已经更新。 保留CNAME、README.md等文件提交之后网页上一看，发现以前其它代码都没了，此时不要慌，一些非md文件可以把他们放到source文件夹下，这里的所有文件都会原样复制（除了md文件）到public目录。 由于hexo默认会把所有md文件都转换成html，包括README.md，所有需要每次生成之后、上传之前，手动将README.md复制到public目录，并删除README.html。 修改hexo的主题在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。 为了描述方便，在以下说明中，将前者称为 站点配置文件， 后者称为 主题配置文件. 以我的为例： 开始更换主题，hexo默认的主题是landscape,这里我更换的是yilia主题。 1、clone主题代码 首先进入blog文件夹 1cd blog 在终端的根目录blog下执行： 1git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 2、修改配置文件 修改根目录下的_config.yml文件： 1theme: yilia //默认为landscape 3、修改themes/yilia/_config.yml文件： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133# Headermenu: 主页: / 所有文章: /allPages 随笔: /tags 相册: /photos # SubNavsubnav: github: "https://github.com/xiaolei19991030x" weibo: "#" rss: "#" zhihu: "#" qq: http://wpa.qq.com/msgrd?v=3&amp;1784640836=2604068029&amp;site=qq&amp;menu=yes #weixin: "#" #jianshu: "#" #douban: "#" #segmentfault: "#" #bilibili: "#" #acfun: "#" #mail: "mailto:litten225@qq.com" #facebook: "#" #google: "#" #twitter: "#" #linkedin: "#"rss: /atom.xml# 是否需要修改 root 路径# 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，# 请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。root: /# Content# 文章太长，截断按钮文字excerpt_link: more# 文章卡片右下角常驻链接，不需要请设置为falseshow_all_link: '展开全文'# 数学公式mathjax: true# 是否在新窗口打开链接open_in_new: true# 打赏# 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏reward_type: 2# 打赏wordingreward_wording: '谢谢你请我吃糖果'# 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpgalipay: # 微信二维码图片地址weixin: # 目录# 目录设定：0-不显示目录； 1-文章对应的md文件里有toc:true属性，才有目录； 2-所有文章均显示目录toc: 1# 根据自己的习惯来设置，如果你的目录标题习惯有标号，置为true即可隐藏hexo重复的序号；否则置为falsetoc_hide_index: true# 目录为空时的提示toc_empty_wording: '目录，不存在的…'# 是否有快速回到顶部的按钮top: true# Miscellaneousbaidu_analytics: ''google_analytics: ''favicon: /img/header.jpg#你的头像urlavatar: /img/header.jpg#是否开启分享share_jia: true#评论：1、多说；2、网易云跟帖；3、畅言；4、Disqus；5、Gitment#不需要使用某项，直接设置值为false，或注释掉#具体请参考wiki：https://github.com/litten/hexo-theme-yilia/wiki/#1、多说duoshuo: true#2、网易云跟帖wangyiyun: true#3、畅言changyan_appid: falsechangyan_conf: false#4、Disqus 在hexo根目录的config里也有disqus_shortname字段，优先使用yilia的disqus: false#5、Gitmentgitment_owner: true #你的 GitHub IDgitment_repo: '' #存储评论的 repogitment_oauth: client_id: '' #client ID client_secret: '' #client secret# 样式定制 - 一般不需要修改，除非有很强的定制欲望…style: # 头像上面的背景颜色 header: '#4d4d4d' # 右滑板块背景 slider: 'linear-gradient(200deg,#a0cfe4,#e8c37e)'# slider的设置slider: # 是否默认展开tags板块 showTags: false# 智能菜单# 如不需要，将该对应项置为false# 比如#smart_menu:# friends: falsesmart_menu: innerArchive: '所有文章' friends: '友链' aboutme: '关于我'friends: 友情链接1: http://localhost:4000/ 友情链接2: http://localhost:4000/ 友情链接3: http://localhost:4000/ 友情链接4: http://localhost:4000/ 友情链接5: http://localhost:4000/ 友情链接6: http://localhost:4000/aboutme: 本科&lt;br&gt;&lt;br&gt;目前大三在校生&lt;br&gt;java开发实习工程师 4、运行 1234567hexo clean //清空之前主题hexo g //生成静态文件hexo s //在本地运行hexo d //发布到github的page上 这是我更换主题过后的最原始的博客页面： 写博客1hexo new &apos;博客文章名字&apos; 运行测试 1hexo s -g //生成静态文件，启动本地服务器 最后附上我的博客地址：https://xiaolei19991030x.github.io 到这里基本的博客的搭建就已经结束了，后续再继续更新啦，下次见！！！]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>node</tag>
        <tag>Git</tag>
        <tag>hexo</tag>
        <tag>SSH</tag>
        <tag>github page</tag>
        <tag>yilia</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
</search>
